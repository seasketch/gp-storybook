import{j as t}from"./jsx-runtime-DEdD30eg.js";import{n as M}from"./helpers-CEsPW1hT.js";import"./index-B2Cm0kwl.js";import{k as F,b as w}from"./objective-CIkv88AO.js";import{p as B}from"./number-BAURMb9d.js";import{v,H as V}from"./valueFormatter-DK9vM_WF.js";import"./ReportDecorator-BLl16b_j.js";import{T as R}from"./Table-Db9VXgo_.js";import{L as T}from"./LayerToggle-CutCh_0U.js";import{R as G}from"./ReportTableStyled-YHOh9k4c.js";import{d as q}from"./styled-components.browser.esm-Cwi-fKCl.js";import{T as L}from"./Tooltip-D2Zg19lv.js";import{u as D}from"./useTranslation-SdK8TBCK.js";import{I as N}from"./InfoCircleFill.esm-CjhE5QEd.js";import{C as P}from"./CheckCircleFill.esm-DtBQOjIm.js";const z=(p,y)=>{if(p.objectiveId)return p.objectiveId;if(y){const a=F(p.classes,i=>i.classId)[y].objectiveId;if(a)return a}throw new Error(`Expected objectiveId for metricGroup or class ${y}`)},W=q(G)`
  .styled {
    font-size: 13px;
    td {
      padding: 6px 5px;
    }
  }
`,_=({rows:p,columnConfig:y,metricGroup:d,objective:a})=>{const{t:i}=D(),h=F(d.classes,u=>u.classId),c=M(p,["classId","metricId"]),b=Object.keys(c).map(u=>({classId:u})),S=(u=>{const A=100/u.length,O=i("Class"),E=i("Map"),H=i("Target"),$=i("Goal"),k=i("Value");return u.map(e=>{const f={width:`${e.width||A}%`,...e.colStyle?e.colStyle:{}};switch(e.type){case"class":return{Header:e.columnLabel||O,accessor:r=>{var s;return i((s=h[r.classId||"missing"])==null?void 0:s.display)||"missing"},style:f};case"metricValue":return{Header:e.columnLabel||k,accessor:r=>{if(!e.metricId)throw new Error("Missing metricId in column config");const l=c[r.classId]&&c[r.classId][e.metricId]?c[r.classId][e.metricId][0].value:0,s=(()=>{var m;if(Number.isNaN(l)){const g=(((m=h[r.classId||"missing"])==null?void 0:m.display)||"This feature class")+" not found in the selected planning area";return t.jsx(L,{text:g,placement:"bottom",offset:{horizontal:0,vertical:5},children:t.jsx(N,{size:14,style:{color:"#83C6E6"}})})}else return t.jsx(t.Fragment,{})})(),n=(()=>{const m=Number.isNaN(l)?0:l;return e.valueFormatter?v(m,e.valueFormatter):m})();return t.jsxs(t.Fragment,{children:[n,e.valueLabel?` ${e.valueLabel}`:"",s]})},style:f};case"metricChart":return{Header:e.columnLabel||" ",style:{textAlign:"center",...f},accessor:(r,l)=>{var j;if(!e.metricId)throw new Error("Missing metricId in column config");const s=c[r.classId]&&c[r.classId][e.metricId]?c[r.classId][e.metricId][0].value:0,n=(()=>{if(!a)return 0;if(Array.isArray(a)){const o=z(d,r.classId),x=Array.isArray(a)?w(o,a):a;return e.valueFormatter==="percent"?x.target*100:x.target}else return e.valueFormatter==="percent"?a.target*100:a.target})(),m=(((j=h[r.classId||"missing"])==null?void 0:j.display)||"This feature class")+" not found in the selected planning area",g={...e.chartOptions?e.chartOptions:{},rows:[[[e.valueFormatter==="percent"?s*100:s]]],rowConfigs:[{title:o=>t.jsxs(t.Fragment,{children:[Number.isNaN(o)?t.jsx(L,{text:m,placement:"bottom",offset:{horizontal:0,vertical:5},children:t.jsx(N,{size:14,style:{color:"#83C6E6"}})}):n&&o>=n?t.jsx(P,{size:14,style:{color:"#78c679",paddingRight:5}}):t.jsx(t.Fragment,{}),B(Number.isNaN(o)?0:o/100)]})}],max:100};let I;return typeof e.targetValueFormatter=="function"?I=e.targetValueFormatter(n,l,b.length):I=o=>l===b.length-1?`${H} - ${v(o/100,"percent0dig")}`:"",t.jsx("div",{style:{display:"flex",alignItems:"center"},children:t.jsx("div",{style:{flex:1},children:t.jsx(V,{blockGroupNames:["foo"],blockGroupStyles:[{backgroundColor:"#ACD0DE"}],showTitle:!0,showLegend:!1,showTargetLabel:!0,targetLabelPosition:"bottom",showTotalLabel:!1,barHeight:12,target:n||void 0,targetValueFormatter:I,...g})})})}};case"metricGoal":return{Header:e.columnLabel||$,style:f,accessor:r=>{const l=z(d,r.classId),s=Array.isArray(a)?w(l,a):a;if(!s)throw new Error(`Missing objective for objectiveId ${l}`);return e.valueFormatter?v(s.target,e.valueFormatter):`${s.target}${e.valueLabel?` ${e.valueLabel}`:""}`}};case"layerToggle":return{Header:e.columnLabel||E,style:{textAlign:"center",...f},accessor:(r,l)=>{const s=!d.layerId,n=d.layerId||h[r.classId].layerId;return s&&n?t.jsx(T,{simple:!0,size:"small",layerId:n,style:{marginTop:0,justifyContent:"center"}}):!s&&n&&l===0?t.jsx(T,{simple:!0,size:"small",layerId:n,style:{marginTop:0,justifyContent:"center"}}):t.jsx(t.Fragment,{})}};default:throw new Error(`Unexpected ClassTableColumnConfig type ${e.type}`)}})})(y);return t.jsx(W,{children:t.jsx(R,{className:"styled",columns:S,data:b})})};_.__docgenInfo={description:`Table displaying class metrics, one class per table row.  Having more than one metric per class may yield unexpected results
Returns 0 value in table when faced with a 'missing' metric instead of erroring
Handles "class has no value" NaN situation (common when sketch doesn't overlap with a geography) by overwriting with 0 and adding information circle`,methods:[],displayName:"ClassTable",props:{rows:{required:!0,tsType:{name:"Array",elements:[{name:"z.infer",elements:[{name:"metricSchema"}],raw:"z.infer<typeof metricSchema>"}],raw:"Metric[]"},description:"Table row objects, each expected to have a classId and value."},metricGroup:{required:!0,tsType:{name:"z.infer",elements:[{name:"metricGroupSchema"}],raw:"z.infer<typeof metricGroupSchema>"},description:"Source for metric class definitions. if group has layerId at top-level, will display one toggle for whole group"},objective:{required:!1,tsType:{name:"union",raw:"Objective | Objective[]",elements:[{name:"z.infer",elements:[{name:"objectiveSchema"}],raw:"z.infer<typeof objectiveSchema>"},{name:"Array",elements:[{name:"z.infer",elements:[{name:"objectiveSchema"}],raw:"z.infer<typeof objectiveSchema>"}],raw:"Objective[]"}]},description:"Optional objective for metric"},columnConfig:{required:!0,tsType:{name:"Array",elements:[{name:"ClassTableColumnConfig"}],raw:"ClassTableColumnConfig[]"},description:"configuration of one or more columns to display"}}};export{_ as C};
